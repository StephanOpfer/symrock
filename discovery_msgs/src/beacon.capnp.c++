// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: beacon.capnp

#include "beacon.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<62> b_cd7c0e6550ea3ccc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    204,  60, 234,  80, 101,  14, 124, 205,
     13,   0,   0,   0,   1,   0,   1,   0,
     48, 176,   0, 135, 244,  38,  23, 140,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 101,  97,  99, 111, 110,  46,  99,
     97, 112, 110, 112,  58,  66, 101,  97,
     99, 111, 110,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    117, 117, 105, 100,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 112,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 114, 116,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cd7c0e6550ea3ccc = b_cd7c0e6550ea3ccc.words;
#if !CAPNP_LITE
static const uint16_t m_cd7c0e6550ea3ccc[] = {1, 2, 0};
static const uint16_t i_cd7c0e6550ea3ccc[] = {0, 1, 2};
const ::capnp::_::RawSchema s_cd7c0e6550ea3ccc = {
  0xcd7c0e6550ea3ccc, b_cd7c0e6550ea3ccc.words, 62, nullptr, m_cd7c0e6550ea3ccc,
  0, 3, i_cd7c0e6550ea3ccc, nullptr, nullptr, { &s_cd7c0e6550ea3ccc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace discovery_msgs {

// Beacon
#ifndef _MSC_VER
constexpr uint16_t Beacon::_capnpPrivate::dataWordSize;
constexpr uint16_t Beacon::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Beacon::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Beacon::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Beacon::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace

